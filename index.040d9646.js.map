{"mappings":"ACUA,IAAK,IAPC,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAO,EAAM,IAAI,CAIjB,EAAa,EAAE,CAEZ,EAAI,EAAG,EAAI,EAAK,MAAM,CAAE,IAAK,CACpC,IAAM,EAAO,CAAI,CAAC,EAAE,CAAC,KAAK,CAJP,EAIqB,CAExC,EAAW,IAAI,CAAC,EAAO,EAAK,WAAW,CAAG,GAC5C,CAGA,IAAK,IAAI,EAAI,EAAG,EAAI,EAAK,MAAM,CAAE,IAG/B,AAFgB,CAAI,CAAC,EAAE,CAAC,UAAU,CAAC,CAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CAAG,GAElD,WAAW,CAAG,CAAU,CAAC,EAAE,CAjBrC,IAqBM,EAAW,EAAM,IAAI,CAAC,EAAE,CAAC,KAAK,CAC9B,EAAU,EAAM,IAAI,CAAC,EAAK,MAAM,CAAG,EAAE,CAAC,KAAK,CAG3C,EAAe,CAAQ,CAAC,EAAS,MAAM,CAAG,EAAE,CAC5C,EAAc,CAAO,CAAC,EAAQ,MAAM,CAAG,EAAE,AAE/C,CAAA,EAAa,SAAS,CAAI,OAA+B,MAAA,CAAzB,EAAa,WAAW,CAAC,SACzD,EAAY,SAAS,CAAI,OAA8B,MAAA,CAAxB,EAAY,WAAW,CAAC","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\n// Get table and it's raws from HTML\nvar table = document.querySelector(\"table\");\nvar rows = table.rows;\n// Create array from the copied data\nvar columnToCopy = 1;\nvar copiedData = [];\nfor(var i = 0; i < rows.length; i++){\n    var cell = rows[i].cells[columnToCopy];\n    copiedData.push(cell ? cell.textContent : \"\");\n}\n// Creating new row in HTML and insering data\nfor(var i1 = 0; i1 < rows.length; i1++){\n    var newCell = rows[i1].insertCell(rows[i1].cells.length - 1);\n    newCell.textContent = copiedData[i1];\n}\n// Receiving collection from the first and last table's rows\nvar firstRow = table.rows[0].cells;\nvar lastRow = table.rows[rows.length - 1].cells;\n// Changing tag of the first and last cells from <td> to <th>\nvar newRowHeader = firstRow[firstRow.length - 2];\nvar newLastCell = lastRow[lastRow.length - 2];\nnewRowHeader.outerHTML = \"<th>\".concat(newRowHeader.textContent, \"</th>\");\nnewLastCell.outerHTML = \"<th>\".concat(newLastCell.textContent, \"</th>\");\n\n//# sourceMappingURL=index.040d9646.js.map\n","'use strict';\n\n// Get table and it's raws from HTML\nconst table = document.querySelector('table');\nconst rows = table.rows;\n\n// Create array from the copied data\nconst columnToCopy = 1;\nconst copiedData = [];\n\nfor (let i = 0; i < rows.length; i++) {\n  const cell = rows[i].cells[columnToCopy];\n\n  copiedData.push(cell ? cell.textContent : '');\n}\n\n// Creating new row in HTML and insering data\nfor (let i = 0; i < rows.length; i++) {\n  const newCell = rows[i].insertCell(rows[i].cells.length - 1);\n\n  newCell.textContent = copiedData[i];\n}\n\n// Receiving collection from the first and last table's rows\nconst firstRow = table.rows[0].cells;\nconst lastRow = table.rows[rows.length - 1].cells;\n\n// Changing tag of the first and last cells from <td> to <th>\nconst newRowHeader = firstRow[firstRow.length - 2];\nconst newLastCell = lastRow[lastRow.length - 2];\n\nnewRowHeader.outerHTML = `<th>${newRowHeader.textContent}</th>`;\nnewLastCell.outerHTML = `<th>${newLastCell.textContent}</th>`;\n"],"names":["table","document","querySelector","rows","copiedData","i","length","cell","cells","push","textContent","i1","newCell","insertCell","firstRow","lastRow","newRowHeader","newLastCell","outerHTML","concat"],"version":3,"file":"index.040d9646.js.map"}